-- Create the database
CREATE DATABASE LibraryDB;
USE LibraryDB;

-- Create Books table
CREATE TABLE Books (
    BookID INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255) NOT NULL,
    Author VARCHAR(255) NOT NULL,
    Genre VARCHAR(100),
    Quantity INT NOT NULL DEFAULT 1
);

-- Create Students table
CREATE TABLE Students (
    StudentID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Phone VARCHAR(15) UNIQUE NOT NULL
);

-- Create IssuedBooks table
CREATE TABLE IssuedBooks (
    IssueID INT PRIMARY KEY AUTO_INCREMENT,
    BookID INT,
    StudentID INT,
    IssueDate DATE DEFAULT CURDATE(),
    DueDate DATE DEFAULT (CURDATE() + INTERVAL 14 DAY),
    ReturnDate DATE,
    FOREIGN KEY (BookID) REFERENCES Books(BookID),
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID)
);

-- Insert sample data into Books table
INSERT INTO Books (Title, Author, Genre, Quantity) VALUES
('The Alchemist', 'Paulo Coelho', 'Fiction', 5),
('Introduction to Algorithms', 'Thomas H. Cormen', 'Computer Science', 3),
('Harry Potter', 'J.K. Rowling', 'Fantasy', 4);

-- Insert sample data into Students table
INSERT INTO Students (Name, Email, Phone) VALUES
('Alice Johnson', 'alice@example.com', '9876543210'),
('Bob Smith', 'bob@example.com', '9123456789');

-- Issue a book to a student
INSERT INTO IssuedBooks (BookID, StudentID) VALUES (1, 1);

-- Return a book (update return date)
UPDATE IssuedBooks SET ReturnDate = CURDATE() WHERE IssueID = 1;

-- Check available books
SELECT * FROM Books WHERE Quantity > 0;

-- View all issued books
SELECT Books.Title, Students.Name, IssuedBooks.IssueDate, IssuedBooks.DueDate, IssuedBooks.ReturnDate 
FROM IssuedBooks
JOIN Books ON IssuedBooks.BookID = Books.BookID
JOIN Students ON IssuedBooks.StudentID = Students.StudentID;

-- Get overdue books
SELECT Books.Title, Students.Name, IssuedBooks.DueDate 
FROM IssuedBooks
JOIN Books ON IssuedBooks.BookID = Books.BookID
JOIN Students ON IssuedBooks.StudentID = Students.StudentID
WHERE IssuedBooks.ReturnDate IS NULL AND IssuedBooks.DueDate < CURDATE();
